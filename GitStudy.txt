在这里记录我的Git学习记录：
1.创建Git版本库：
	mkdir learngit//(本地版本库的名称，会自动创建一个文件夹)
	cd learngit
	pwd //用于显示当前目录 如D:/learngit
	
	第二步：通过git init把刚创建的目录变成Git可以管理的仓库：
	git init
	//终端显示：Initialized empty Git repository in
	//目录下多出.git目录 ls -ah 可查看隐藏
	
	然后把文件添加到版本库。
	git add readme.txt//(文件名)注意，可反复多次使用，添加多个文件；
	git commit -m "wrote a readme file"//(提交并且描述)
	//commit可以一次提交很多文件，所以你可以多次add不同的文件
2.时光穿梭
	git status//命令可以让我们时刻掌握仓库当前的状态
	git diff readme.txt//git diff顾名思义就是查看difference
	//要随时掌握工作区的状态，使用git status命令。
	//如果git status告诉你有文件被修改过，用git diff可以查看修改内容。
	2.1 版本退回
		git log//命令可以告诉我们历史记录，在Git中，我们用git log命令查看 git log命令显示从最近到最远的提交日志
		git log/如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数
		git reset --hard HEAD^//把当前版本退回到上一个版本 上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100
		cat readme.txt//查看文件内容
		git reset --hard ID//ID为版本号commit id
		git reflog//git reflog用来记录你的每一次命令
		//HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id
		//穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
		//要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。
	2.2 工作区和暂存区
		去廖老师那去看
	2.3 管理修改
		git diff HEAD -- readme.txt//命令可以查看工作区和版本库里面最新版本的区别
		每次修改，如果不用git add到暂存区，那就不会加入到commit中。
		聚体去自己看

